class Solution {
public:

    int f(int i,int j,vector<int>& nums,vector<vector<int>>& dp)
    {
       if(j-i==1)
           return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int ans=INT_MAX;
         for(int k=i+1;k<=j-1;k++)
         {
            int cost=nums[j]-nums[i];
            ans=min(ans,cost+f(i,k,nums,dp)+f(k,j,nums,dp));
        }
        return dp[i][j]=ans;
    }
    
    int minCost(int n, vector<int>& cuts) 
    {
        cuts.push_back(n);
        cuts.insert(cuts.begin(),0);
        vector<vector<int>> dp(cuts.size()+1,vector<int>(cuts.size()+1,-1));
        sort(cuts.begin(),cuts.end());
        int ans=f(0,cuts.size()-1,cuts,dp);
        return ans;
        
    }
};
